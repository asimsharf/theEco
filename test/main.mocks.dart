// Mocks generated by Mockito 5.4.4 from annotations
// in theeco/test/main.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i9;

import 'package:either_dart/either.dart' as _i10;
import 'package:get/get.dart' as _i3;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i12;
import 'package:theeco/app/modules/home/controllers/home_controller.dart'
    as _i4;
import 'package:theeco/app/modules/home/interfaces/homeInterface.dart' as _i2;
import 'package:theeco/app/modules/home/models/todo_request_model.dart' as _i7;
import 'package:theeco/app/modules/home/models/todos_model.dart' as _i5;
import 'package:theeco/app/shared/errors/failure.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHomeInterface_0 extends _i1.SmartFake implements _i2.HomeInterface {
  _FakeHomeInterface_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_1 extends _i1.SmartFake implements _i3.RxBool {
  _FakeRxBool_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_2<E> extends _i1.SmartFake implements _i3.RxList<E> {
  _FakeRxList_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_3<T> extends _i1.SmartFake
    implements _i3.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeController].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeController extends _i1.Mock implements _i4.HomeController {
  MockHomeController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HomeInterface get homeInterface => (super.noSuchMethod(
        Invocation.getter(#homeInterface),
        returnValue: _FakeHomeInterface_0(
          this,
          Invocation.getter(#homeInterface),
        ),
      ) as _i2.HomeInterface);

  @override
  set homeInterface(_i2.HomeInterface? _homeInterface) => super.noSuchMethod(
        Invocation.setter(
          #homeInterface,
          _homeInterface,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.RxBool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: _FakeRxBool_1(
          this,
          Invocation.getter(#isLoading),
        ),
      ) as _i3.RxBool);

  @override
  _i3.RxList<_i5.TodosModel> get todos => (super.noSuchMethod(
        Invocation.getter(#todos),
        returnValue: _FakeRxList_2<_i5.TodosModel>(
          this,
          Invocation.getter(#todos),
        ),
      ) as _i3.RxList<_i5.TodosModel>);

  @override
  _i3.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_3<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i3.InternalFinalCallback<void>);

  @override
  _i3.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_3<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i3.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> getHomeData() => (super.noSuchMethod(
        Invocation.method(
          #getHomeData,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> getHomeDataTow() => (super.noSuchMethod(
        Invocation.method(
          #getHomeDataTow,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> postHomeData(_i7.TodoRequestModel? todos) =>
      (super.noSuchMethod(
        Invocation.method(
          #postHomeData,
          [todos],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateTodo(_i5.TodosModel? copyWith) => (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [copyWith],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Disposer addListener(_i8.GetStateUpdate? listener) => (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i8.Disposer);

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i9.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Disposer addListenerId(
    Object? key,
    _i8.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i8.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [HomeInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeInterface extends _i1.Mock implements _i2.HomeInterface {
  MockHomeInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i5.TodosModel>> getHomeData() => (super.noSuchMethod(
        Invocation.method(
          #getHomeData,
          [],
        ),
        returnValue: _i6.Future<List<_i5.TodosModel>>.value(<_i5.TodosModel>[]),
      ) as _i6.Future<List<_i5.TodosModel>>);

  @override
  _i6.Future<_i10.Either<_i11.Failure, List<_i5.TodosModel>>>
      getHomeDataTow() => (super.noSuchMethod(
            Invocation.method(
              #getHomeDataTow,
              [],
            ),
            returnValue: _i6
                .Future<_i10.Either<_i11.Failure, List<_i5.TodosModel>>>.value(
                _i12.dummyValue<
                    _i10.Either<_i11.Failure, List<_i5.TodosModel>>>(
              this,
              Invocation.method(
                #getHomeDataTow,
                [],
              ),
            )),
          ) as _i6.Future<_i10.Either<_i11.Failure, List<_i5.TodosModel>>>);

  @override
  _i6.Future<bool> getHomeDataThree() => (super.noSuchMethod(
        Invocation.method(
          #getHomeDataThree,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i10.Either<_i11.Failure, _i5.TodosModel>> postHomeData(
          _i7.TodoRequestModel? todos) =>
      (super.noSuchMethod(
        Invocation.method(
          #postHomeData,
          [todos],
        ),
        returnValue:
            _i6.Future<_i10.Either<_i11.Failure, _i5.TodosModel>>.value(
                _i12.dummyValue<_i10.Either<_i11.Failure, _i5.TodosModel>>(
          this,
          Invocation.method(
            #postHomeData,
            [todos],
          ),
        )),
      ) as _i6.Future<_i10.Either<_i11.Failure, _i5.TodosModel>>);
}
